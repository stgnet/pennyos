#!/bin/sh
# a very simple script to grab instructions from build server and run them

# cron doesn't put me in my home
cd /home/buildagent
LOG="/home/buildagent/upload-$$.log"

# cron doesn't set up my PATH correctly (can cause mock failure)
PATH=/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/buildagent/bin

# don't run if there is something already running
[ -f build-script ] && exit 0

# don't run if the loadavg hits 1 or more
LOADAVG="`cat /proc/loadavg`"
[ "${LOADAVG%%.*}" -lt 1 ] || exit

# don't run if there are already 5 uploads or more in progress
UPLOADS="`ls -1 result-*.tgz | wc -l`"
[ $UPLOADS -lt 1 ] || exit

# get the MAC address
HWADDR="`ifconfig |fgrep HWaddr |head -1 |tr -d ':'`"
MAC="${HWADDR#*HWaddr }"
MAC="${MAC:0:12}"

# download script, ask for headers
wget -qSO build-script --header="X-Agent-ID: $MAC" http://build.pennyos.org/getjob.php 2> build-script-header >>$LOG 2>&1

# if download didn't succeed (404 if nothing to do), stop
if [ $? -ne 0 ]
then
    rm -f build-script build-script-header
    exit 0
fi

# check md5
SCRIPT_MD5="`md5sum <build-script`"
HEADER_MD5="`fgrep Content-MD5: build-script-header`"

if [ "${SCRIPT_MD5:0:32}" != "${HEADER_MD5: -32}" ]
then
    # something is wrong, but don't bother to log it or anything
    rm -f build-script build-script-header
    exit 0
fi

JOB_ID="`fgrep X-Job-ID: build-script-header`"
JOB_ID="${JOB_ID#*X-Job-ID: }"

rm -rf build-dir result.tgz
mkdir build-dir
cd build-dir

STATUS="fail"
if sh ../build-script > build-script-output 2>&1
then
    echo "sh returned $? - OK" >>$LOG
	STATUS="ok"
else
    echo "sh returned $? - fail" >>$LOG
fi
cat build-script-output >>$LOG

RESULT="result-$$.tgz"

echo "Creating archive jobid=$JOB_ID agentid=$MAC status=$STATUS" >>$LOG
tar cvfz ../$RESULT . >>$LOG 2>&1

cd ..
rm -rf build-dir build-script build-script-header

echo "Uploading jobid=$JOB_ID agentid=$MAC status=$STATUS..." >>$LOG
curl -q -F "userfile=@$RESULT" -F "jobid=$JOB_ID" -F "agentid=$MAC" -F "status=$STATUS" http://build.pennyos.org/result.php >>$LOG 2>&1
echo "COMPLETED upload rc=$? - ready for next job" >>$LOG

rm -f $RESULT

